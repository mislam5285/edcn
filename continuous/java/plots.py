# Generates plots from the results generated by the Continuous.java program.

import math, pylab, sys
import matplotlib.cm as cm
from matplotlib.colors import normalize as Norm

def main(args):
    if len(args) < 3 or len(args) > 4:
        print "Usage: python plots.py <results file> <start time> <end time> [<xstar>]"
        sys.exit()
    fh = open(args[0], "r")
    N, T, step, max_trait = fh.readline().split()
    N = int(N)
    T = int(T)
    step = int(step)
    max_trait = float(max_trait)
    ts = int(args[1]) / step
    td = int(args[2]) / step + step
    x = range(0, T + step, step)
    lmean = []
    m = []
    vmin = 1.0
    vmax = 0.0
    for line in fh.readlines():
        line = line.split()
        p = float(line[0])
        q = float(line[1])
        r = float(line[2])
        lmean.append(q)
        l = [1.0 for j in range(0, 101)]
        for item in line[3:]:
            a, b = map(int, item.split(":"))
            c = 1.0 - b * 1.0 / N
            if c < vmin and c > 0:
                vmin = c
            if c > vmax and c < 1:
                vmax = c
            l[a] = c
        m.append(l)
    fh.close()
    last = int(T * 0.1)
    i = T / step - last / step
    l = lmean[i:]
    final_trait_mean = sum(l) / len(l) 

    # Time evolution of the mean trait in the population.
    pylab.figure(1, figsize = (7, 4.5), dpi = 500)
    pylab.xlabel(r"$t$")
    pylab.ylabel(r"$\bar{x}$")
    pylab.plot(x[ts:td], lmean[ts:td], "#000000", alpha = 0.6, linewidth = 2.0)
    if len(args) == 4:
        pylab.axhline(y = float(args[3]), linestyle = "-.", linewidth = 1, 
                      color = "black")
    pylab.figtext(0.82, 0.85, r"$\bar{x}_\infty = %4.3f$" %(final_trait_mean), 
                  ha = 'center', va = 'center', bbox = dict(facecolor = 'white', edgecolor = 'black'))
    pylab.xlim(int(args[1]), int(args[2]))
    pylab.ylim(0, float(max_trait))
    ax = pylab.gca()
    ax.xaxis.major.formatter.set_powerlimits((0,0))
    pylab.savefig("plot1.pdf", format = "pdf")
    pylab.close(1)

    # Time evolution of the distribution of traits.
    pylab.figure(2, figsize = (7, 4.5), dpi = 500)
    pylab.xlabel(r"$x$")
    pylab.ylabel(r"$t$")
    pylab.imshow(m[ts:td], interpolation = "bilinear", origin = "l", 
                 cmap = cm.gray, norm = Norm(vmin, vmax), 
                 extent = [0, float(max_trait), int(args[1]), int(args[2])])
    if len(args) == 4:
        pylab.axvline(x = float(args[3]), linestyle = "-.", linewidth = 1, 
                      color = "black")
    pylab.axis("tight")
    ax = pylab.gca()
    ax.yaxis.major.formatter.set_powerlimits((0,0))
    pylab.savefig("plot2.pdf", format = "pdf")
    pylab.close(2)

if __name__ == "__main__":
    main(sys.argv[1:])
